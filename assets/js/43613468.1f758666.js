"use strict";(self.webpackChunknetworkx_guide=self.webpackChunknetworkx_guide||[]).push([[853],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>b});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),p=u(n),b=a,f=p["".concat(c,".").concat(b)]||p[b]||d[b]||o;return n?r.createElement(f,s(s({ref:t},l),{},{components:n})):r.createElement(f,s({ref:t},l))}));function b(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=p;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var u=2;u<o;u++)s[u]=n[u];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},2808:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>u});var r=n(7462),a=(n(7294),n(3905));const o={id:"basics",title:"Attribute basics",sidebar_label:"Attribute basics"},s=void 0,i={unversionedId:"functions/attributes/basics",id:"functions/attributes/basics",title:"Attribute basics",description:"How to store and access node attributes using NetworkX in Python?",source:"@site/docs/functions/attributes/basics.md",sourceDirName:"functions/attributes",slug:"/functions/attributes/basics",permalink:"/functions/attributes/basics",draft:!1,editUrl:"https://github.com/memgraph/networkx-guide/edit/main/docs/functions/attributes/basics.md",tags:[],version:"current",frontMatter:{id:"basics",title:"Attribute basics",sidebar_label:"Attribute basics"},sidebar:"networkx_guide",previous:{title:"Functions overview",permalink:"/functions"},next:{title:"Algorithms overview",permalink:"/algorithms"}},c={},u=[{value:"How to store and access node attributes using NetworkX in Python?",id:"how-to-store-and-access-node-attributes-using-networkx-in-python",level:2},{value:"How to access and change attributes of connected nodes?",id:"how-to-access-and-change-attributes-of-connected-nodes",level:2}],l={toc:u};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"how-to-store-and-access-node-attributes-using-networkx-in-python"},"How to store and access node attributes using NetworkX in Python?"),(0,a.kt)("p",null,"You can add attributes when adding the nodes to the graph:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"G.add_node('Person', name='Anna', year_of_birth='1990')\n")),(0,a.kt)("p",null,"Attributes can also be added as a dictionary:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"G.add_node('Person', {'name': 'Anna', 'year_of_birth': 1990})\n")),(0,a.kt)("p",null,"You can access the attributes just as you would access any dictionary in Python:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"G.node['Person']['name']\nG.node['Person']['year_of_birth']\n")),(0,a.kt)("h2",{id:"how-to-access-and-change-attributes-of-connected-nodes"},"How to access and change attributes of connected nodes?"),(0,a.kt)("p",null,"We can use the ",(0,a.kt)("inlineCode",{parentName:"p"},"G.edges()")," function to get all the edges of a graph and iterate over them.\nWe need to set ",(0,a.kt)("inlineCode",{parentName:"p"},"data=True")," to access the attributes."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"for n1, n2 in list(G.edges(data=True)):\n    print(G.node[n1]['name'], G.node[n2]['name'])\n    print(G.node[n1]['year_of_birth'], G.node[n2]['year_of_birth'])\n")))}d.isMDXComponent=!0}}]);