"use strict";(self.webpackChunknetworkx_guide=self.webpackChunknetworkx_guide||[]).push([[816],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),d=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=d(n),m=r,k=p["".concat(s,".").concat(m)]||p[m]||c[m]||o;return n?a.createElement(k,l(l({ref:t},u),{},{components:n})):a.createElement(k,l({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=p;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var d=2;d<o;d++)l[d]=n[d];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},3137:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return i},metadata:function(){return d},toc:function(){return c}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),l=["components"],i={id:"functions",title:"Functions overview",sidebar_label:"Functions overview",slug:"/functions"},s=void 0,d={unversionedId:"functions/functions",id:"functions/functions",title:"Functions overview",description:"Graph functions",source:"@site/docs/functions/functions.md",sourceDirName:"functions",slug:"/functions",permalink:"/functions",editUrl:"https://github.com/memgraph/networkx-guide/edit/main/docs/functions/functions.md",tags:[],version:"current",frontMatter:{id:"functions",title:"Functions overview",sidebar_label:"Functions overview",slug:"/functions"},sidebar:"networkx_guide",previous:{title:"Drawing basics",permalink:"/visualization/basics"},next:{title:"Attribute basics",permalink:"/functions/attributes/basics"}},u={},c=[{value:"Graph functions",id:"graph-functions",level:2},{value:"Node functions",id:"node-functions",level:2},{value:"Edge functions",id:"edge-functions",level:2},{value:"Self loop functions",id:"self-loop-functions",level:2},{value:"Attribute functions",id:"attribute-functions",level:2},{value:"Path functions",id:"path-functions",level:2},{value:"Freezing graph structure functions",id:"freezing-graph-structure-functions",level:2}],p={toc:c};function m(e){var t=e.components,n=(0,r.Z)(e,l);return(0,o.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"graph-functions"},"Graph functions"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Function"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://networkx.org/documentation/stable/reference/generated/networkx.classes.function.degree.html#networkx.classes.function.degree"},(0,o.kt)("inlineCode",{parentName:"a"},"degree(G, nbunch, weight)"))),(0,o.kt)("td",{parentName:"tr",align:null},"Returns a degree view of single node or of nbunch of nodes.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://networkx.org/documentation/stable/reference/generated/networkx.classes.function.degree_histogram.html#networkx.classes.function.degree_histogram"},(0,o.kt)("inlineCode",{parentName:"a"},"degree_histogram(G)"))),(0,o.kt)("td",{parentName:"tr",align:null},"Returns a list of the frequency of each degree value.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://networkx.org/documentation/stable/reference/generated/networkx.classes.function.density.html#networkx.classes.function.density"},(0,o.kt)("inlineCode",{parentName:"a"},"density(G)"))),(0,o.kt)("td",{parentName:"tr",align:null},"Returns the density of a graph.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://networkx.org/documentation/stable/reference/generated/networkx.classes.function.create_empty_copy.html#networkx.classes.function.create_empty_copy"},(0,o.kt)("inlineCode",{parentName:"a"},"create_empty_copy(G, with_data)"))),(0,o.kt)("td",{parentName:"tr",align:null},"Returns a copy of the graph G with all of the edges removed.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://networkx.org/documentation/stable/reference/generated/networkx.classes.function.is_directed.html#networkx.classes.function.is_directed"},(0,o.kt)("inlineCode",{parentName:"a"},"is_directed(G)"))),(0,o.kt)("td",{parentName:"tr",align:null},"Return True if graph is directed.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://networkx.org/documentation/stable/reference/generated/networkx.classes.function.to_directed.html#networkx.classes.function.to_directed"},(0,o.kt)("inlineCode",{parentName:"a"},"to_directed(graph)"))),(0,o.kt)("td",{parentName:"tr",align:null},"Returns a directed view of the graph graph.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://networkx.org/documentation/stable/reference/generated/networkx.classes.function.to_undirected.html#networkx.classes.function.to_undirected"},(0,o.kt)("inlineCode",{parentName:"a"},"to_undirected(graph)"))),(0,o.kt)("td",{parentName:"tr",align:null},"Returns an undirected view of the graph graph.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://networkx.org/documentation/stable/reference/generated/networkx.classes.function.is_empty.html#networkx.classes.function.is_empty"},(0,o.kt)("inlineCode",{parentName:"a"},"is_empty(G)"))),(0,o.kt)("td",{parentName:"tr",align:null},"Returns True if G has no edges.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://networkx.org/documentation/stable/reference/generated/networkx.classes.function.add_star.html#networkx.classes.function.add_star"},(0,o.kt)("inlineCode",{parentName:"a"},"add_star(G_to_add_to, nodes_for_star, **attr)"))),(0,o.kt)("td",{parentName:"tr",align:null},"Add a star to Graph G_to_add_to.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://networkx.org/documentation/stable/reference/generated/networkx.classes.function.add_path.html#networkx.classes.function.add_path"},(0,o.kt)("inlineCode",{parentName:"a"},"add_path(G_to_add_to, nodes_for_path, **attr)"))),(0,o.kt)("td",{parentName:"tr",align:null},"Add a path to the Graph G_to_add_to.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://networkx.org/documentation/stable/reference/generated/networkx.classes.function.add_cycle.html#networkx.classes.function.add_cycle"},(0,o.kt)("inlineCode",{parentName:"a"},"add_cycle(G_to_add_to, nodes_for_cycle, **attr)"))),(0,o.kt)("td",{parentName:"tr",align:null},"Add a cycle to the Graph G_to_add_to.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://networkx.org/documentation/stable/reference/generated/networkx.classes.function.subgraph.html#networkx.classes.function.subgraph"},(0,o.kt)("inlineCode",{parentName:"a"},"subgraph(G, nbunch)"))),(0,o.kt)("td",{parentName:"tr",align:null},"Returns the subgraph induced on nodes in nbunch.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://networkx.org/documentation/stable/reference/generated/networkx.classes.function.subgraph_view.html#networkx.classes.function.subgraph_view"},(0,o.kt)("inlineCode",{parentName:"a"},"subgraph_view(G, filter_node, filter_edge)"))),(0,o.kt)("td",{parentName:"tr",align:null},"View of G applying a filter on nodes and edges.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://networkx.org/documentation/stable/reference/generated/networkx.classes.function.induced_subgraph.html#networkx.classes.function.induced_subgraph"},(0,o.kt)("inlineCode",{parentName:"a"},"induced_subgraph(G, nbunch)"))),(0,o.kt)("td",{parentName:"tr",align:null},"Returns a SubGraph view of G showing only nodes in nbunch.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://networkx.org/documentation/stable/reference/generated/networkx.classes.function.restricted_view.html#networkx.classes.function.restricted_view"},(0,o.kt)("inlineCode",{parentName:"a"},"restricted_view(G, nodes, edges)"))),(0,o.kt)("td",{parentName:"tr",align:null},"Returns a view of G with hidden nodes and edges.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://networkx.org/documentation/stable/reference/generated/networkx.classes.function.reverse_view.html#networkx.classes.function.reverse_view"},(0,o.kt)("inlineCode",{parentName:"a"},"reverse_view(G)"))),(0,o.kt)("td",{parentName:"tr",align:null},"View of G with edge directions reversed.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://networkx.org/documentation/stable/reference/generated/networkx.classes.function.edge_subgraph.html#networkx.classes.function.edge_subgraph"},(0,o.kt)("inlineCode",{parentName:"a"},"edge_subgraph(G, edges)"))),(0,o.kt)("td",{parentName:"tr",align:null},"Returns a view of the subgraph induced by the specified edges.")))),(0,o.kt)("h2",{id:"node-functions"},"Node functions"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Function"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://networkx.org/documentation/stable/reference/generated/networkx.classes.function.nodes.html#networkx.classes.function.nodes"},(0,o.kt)("inlineCode",{parentName:"a"},"nodes(G)"))),(0,o.kt)("td",{parentName:"tr",align:null},"Returns an iterator over the graph nodes.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://networkx.org/documentation/stable/reference/generated/networkx.classes.function.number_of_nodes.html#networkx.classes.function.number_of_nodes"},(0,o.kt)("inlineCode",{parentName:"a"},"number_of_nodes(G)"))),(0,o.kt)("td",{parentName:"tr",align:null},"Returns the number of nodes in the graph.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://networkx.org/documentation/stable/reference/generated/networkx.classes.function.neighbors.html#networkx.classes.function.neighbors"},(0,o.kt)("inlineCode",{parentName:"a"},"neighbors(G, n)"))),(0,o.kt)("td",{parentName:"tr",align:null},"Returns a list of nodes connected to node n.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://networkx.org/documentation/stable/reference/generated/networkx.classes.function.all_neighbors.html#networkx.classes.function.all_neighbors"},(0,o.kt)("inlineCode",{parentName:"a"},"all_neighbors(graph, node)"))),(0,o.kt)("td",{parentName:"tr",align:null},"Returns all of the neighbors of a node in the graph.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://networkx.org/documentation/stable/reference/generated/networkx.classes.function.non_neighbors.html#networkx.classes.function.non_neighbors"},(0,o.kt)("inlineCode",{parentName:"a"},"non_neighbors(graph, node)"))),(0,o.kt)("td",{parentName:"tr",align:null},"Returns the non-neighbors of the node in the graph.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://networkx.org/documentation/stable/reference/generated/networkx.classes.function.common_neighbors.html#networkx.classes.function.common_neighbors"},(0,o.kt)("inlineCode",{parentName:"a"},"common_neighbors(G, u, v)"))),(0,o.kt)("td",{parentName:"tr",align:null},"Returns the common neighbors of two nodes in a graph.")))),(0,o.kt)("h2",{id:"edge-functions"},"Edge functions"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Function"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://networkx.org/documentation/stable/reference/generated/networkx.classes.function.edges.html#networkx.classes.function.edges"},(0,o.kt)("inlineCode",{parentName:"a"},"edges(G, nbunch)"))),(0,o.kt)("td",{parentName:"tr",align:null},"Returns an edge view of edges incident to nodes in nbunch.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://networkx.org/documentation/stable/reference/generated/networkx.classes.function.number_of_edges.html#networkx.classes.function.number_of_edges"},(0,o.kt)("inlineCode",{parentName:"a"},"number_of_edges(G)"))),(0,o.kt)("td",{parentName:"tr",align:null},"Returns the number of edges in the graph.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://networkx.org/documentation/stable/reference/generated/networkx.classes.function.density.html#networkx.classes.function.density"},(0,o.kt)("inlineCode",{parentName:"a"},"density(G)"))),(0,o.kt)("td",{parentName:"tr",align:null},"Returns the density of a graph.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://networkx.org/documentation/stable/reference/generated/networkx.classes.function.non_edges.html#networkx.classes.function.non_edges"},(0,o.kt)("inlineCode",{parentName:"a"},"non_edges(G)"))),(0,o.kt)("td",{parentName:"tr",align:null},"Returns the non-existent edges in the graph.")))),(0,o.kt)("h2",{id:"self-loop-functions"},"Self loop functions"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Function"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://networkx.org/documentation/stable/reference/generated/networkx.classes.function.selfloop_edges.html#networkx.classes.function.selfloop_edges"},(0,o.kt)("inlineCode",{parentName:"a"},"selfloop_edges(G, data, keys, default)"))),(0,o.kt)("td",{parentName:"tr",align:null},"Returns an iterator over selfloop edges.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://networkx.org/documentation/stable/reference/generated/networkx.classes.function.number_of_selfloops.html#networkx.classes.function.number_of_selfloops"},(0,o.kt)("inlineCode",{parentName:"a"},"number_of_selfloops(G)"))),(0,o.kt)("td",{parentName:"tr",align:null},"Returns the number of selfloop edges.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://networkx.org/documentation/stable/reference/generated/networkx.classes.function.nodes_with_selfloops.html#networkx.classes.function.nodes_with_selfloops"},(0,o.kt)("inlineCode",{parentName:"a"},"nodes_with_selfloops(G)"))),(0,o.kt)("td",{parentName:"tr",align:null},"Returns an iterator over nodes with self loops.")))),(0,o.kt)("h2",{id:"attribute-functions"},"Attribute functions"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Function"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://networkx.org/documentation/stable/reference/generated/networkx.classes.function.is_weighted.html#networkx.classes.function.is_weighted"},(0,o.kt)("inlineCode",{parentName:"a"},"is_weighted(G, edge, weight)"))),(0,o.kt)("td",{parentName:"tr",align:null},"Returns True if G has weighted edges.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://networkx.org/documentation/stable/reference/generated/networkx.classes.function.is_negatively_weighted.html#networkx.classes.function.is_negatively_weighted"},(0,o.kt)("inlineCode",{parentName:"a"},"is_negatively_weighted(G, edge, weight)"))),(0,o.kt)("td",{parentName:"tr",align:null},"Returns True if G has negatively weighted edges.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://networkx.org/documentation/stable/reference/generated/networkx.classes.function.get_node_attributes.html#networkx.classes.function.get_node_attributes"},(0,o.kt)("inlineCode",{parentName:"a"},"set_node_attributes(G, values, name)"))),(0,o.kt)("td",{parentName:"tr",align:null},"Sets node attributes from a given value or dictionary of values.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://networkx.org/documentation/stable/reference/generated/networkx.classes.function.get_node_attributes.html#networkx.classes.function.get_node_attributes"},(0,o.kt)("inlineCode",{parentName:"a"},"get_node_attributes(G, name)"))),(0,o.kt)("td",{parentName:"tr",align:null},"Get node attributes from graph.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://networkx.org/documentation/stable/reference/generated/networkx.classes.function.set_edge_attributes.html#networkx.classes.function.set_edge_attributes"},(0,o.kt)("inlineCode",{parentName:"a"},"set_edge_attributes(G, values, name)"))),(0,o.kt)("td",{parentName:"tr",align:null},"Sets edge attributes from a given value or dictionary of values.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://networkx.org/documentation/stable/reference/generated/networkx.classes.function.get_edge_attributes.html#networkx.classes.function.get_edge_attributes"},(0,o.kt)("inlineCode",{parentName:"a"},"get_edge_attributes(G, name)"))),(0,o.kt)("td",{parentName:"tr",align:null},"Get edge attributes from graph.")))),(0,o.kt)("h2",{id:"path-functions"},"Path functions"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Function"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://networkx.org/documentation/stable/reference/generated/networkx.classes.function.is_path.html#networkx.classes.function.is_path"},(0,o.kt)("inlineCode",{parentName:"a"},"is_path(G, path)"))),(0,o.kt)("td",{parentName:"tr",align:null},"Returns whether or not the specified path exists.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://networkx.org/documentation/stable/reference/generated/networkx.classes.function.path_weight.html#networkx.classes.function.path_weight"},(0,o.kt)("inlineCode",{parentName:"a"},"path_weight(G, path, weight)"))),(0,o.kt)("td",{parentName:"tr",align:null},"Returns total cost associated with specified path and weight.")))),(0,o.kt)("h2",{id:"freezing-graph-structure-functions"},"Freezing graph structure functions"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Function"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://networkx.org/documentation/stable/reference/generated/networkx.classes.function.freeze.html#networkx.classes.function.freeze"},(0,o.kt)("inlineCode",{parentName:"a"},"freeze(G)"))),(0,o.kt)("td",{parentName:"tr",align:null},"Modify graph to prevent further change by adding or removing nodes or edges.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://networkx.org/documentation/stable/reference/generated/networkx.classes.function.is_frozen.html#networkx.classes.function.is_frozen"},(0,o.kt)("inlineCode",{parentName:"a"},"is_frozen(G)"))),(0,o.kt)("td",{parentName:"tr",align:null},"Returns True if graph is frozen.")))))}m.isMDXComponent=!0}}]);