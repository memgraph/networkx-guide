"use strict";(self.webpackChunknetworkx_guide=self.webpackChunknetworkx_guide||[]).push([[491],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>h});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),u=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=u(a),h=r,d=m["".concat(s,".").concat(h)]||m[h]||c[h]||o;return a?n.createElement(d,i(i({ref:t},p),{},{components:a})):n.createElement(d,i({ref:t},p))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var u=2;u<o;u++)i[u]=a[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},5162:(e,t,a)=>{a.d(t,{Z:()=>i});var n=a(7294),r=a(6010);const o="tabItem_Ymn6";function i(e){let{children:t,hidden:a,className:i}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(o,i),hidden:a},t)}},4866:(e,t,a)=>{a.d(t,{Z:()=>x});var n=a(7462),r=a(7294),o=a(6010),i=a(2466),l=a(6550),s=a(1980),u=a(7392),p=a(12);function c(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:r}}=e;return{value:t,label:a,attributes:n,default:r}}))}function m(e){const{values:t,children:a}=e;return(0,r.useMemo)((()=>{const e=t??c(a);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function h(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function d(e){let{queryString:t=!1,groupId:a}=e;const n=(0,l.k6)(),o=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,s._X)(o),(0,r.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(n.location.search);t.set(o,e),n.replace({...n.location,search:t.toString()})}),[o,n])]}function g(e){const{defaultValue:t,queryString:a=!1,groupId:n}=e,o=m(e),[i,l]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!h({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:o}))),[s,u]=d({queryString:a,groupId:n}),[c,g]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,o]=(0,p.Nk)(a);return[n,(0,r.useCallback)((e=>{a&&o.set(e)}),[a,o])]}({groupId:n}),f=(()=>{const e=s??c;return h({value:e,tabValues:o})?e:null})();(0,r.useLayoutEffect)((()=>{f&&l(f)}),[f]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!h({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),g(e)}),[u,g,o]),tabValues:o}}var f=a(2389);const k="tabList__CuJ",b="tabItem_LNqP";function y(e){let{className:t,block:a,selectedValue:l,selectValue:s,tabValues:u}=e;const p=[],{blockElementScrollPositionUntilNextRender:c}=(0,i.o5)(),m=e=>{const t=e.currentTarget,a=p.indexOf(t),n=u[a].value;n!==l&&(c(t),s(n))},h=e=>{let t=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const a=p.indexOf(e.currentTarget)+1;t=p[a]??p[0];break}case"ArrowLeft":{const a=p.indexOf(e.currentTarget)-1;t=p[a]??p[p.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":a},t)},u.map((e=>{let{value:t,label:a,attributes:i}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:e=>p.push(e),onKeyDown:h,onClick:m},i,{className:(0,o.Z)("tabs__item",b,i?.className,{"tabs__item--active":l===t})}),a??t)})))}function w(e){let{lazy:t,children:a,selectedValue:n}=e;const o=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===n));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function v(e){const t=g(e);return r.createElement("div",{className:(0,o.Z)("tabs-container",k)},r.createElement(y,(0,n.Z)({},e,t)),r.createElement(w,(0,n.Z)({},e,t)))}function x(e){const t=(0,f.Z)();return r.createElement(v,(0,n.Z)({key:String(t)},e))}},5136:(e,t,a)=>{a.d(t,{Z:()=>o});var n=a(7294);const r={ctaButton:"ctaButton_fu4n",ctaBox:"ctaBox_gZT4"};function o(e){const{title:t,url:a}=e;return n.createElement("div",{className:r.ctaBox},n.createElement("a",{href:a,className:r.ctaButton,style:r},t))}},3511:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>u,default:()=>d,frontMatter:()=>s,metadata:()=>p,toc:()=>m});var n=a(7462),r=(a(7294),a(3905)),o=a(4866),i=a(5162),l=a(5136);const s={title:"PageRank algorithm",sidebar_label:"PageRank"},u=void 0,p={unversionedId:"algorithms/centrality-algorithms/pagerank",id:"algorithms/centrality-algorithms/pagerank",title:"PageRank algorithm",description:"Typing terms in Google and searching them up yields a lot of results. But why are we getting the results in that order? The answer to that question is the PageRank algorithm. The PageRank algorithm is a way to measure the importance of a webpage by analyzing the quantity and quality of the links that point to it.",source:"@site/docs/algorithms/centrality-algorithms/pagerank.md",sourceDirName:"algorithms/centrality-algorithms",slug:"/algorithms/centrality-algorithms/pagerank",permalink:"/algorithms/centrality-algorithms/pagerank",draft:!1,editUrl:"https://github.com/memgraph/networkx-guide/edit/main/docs/algorithms/centrality-algorithms/pagerank.md",tags:[],version:"current",frontMatter:{title:"PageRank algorithm",sidebar_label:"PageRank"},sidebar:"networkx_guide",previous:{title:"Centrality algorithms overview",permalink:"/algorithms/centrality-algorithms"},next:{title:"Betweenness centrality",permalink:"/algorithms/centrality-algorithms/betweenness-centrality"}},c={},m=[{value:"How does it work?",id:"how-does-it-work",level:2},{value:"Practical applications",id:"practical-applications",level:2},{value:"Pseudocode",id:"pseudocode",level:2},{value:"Usage in NetworkX",id:"usage-in-networkx",level:2},{value:"Method input",id:"method-input",level:3},{value:"Method output",id:"method-output",level:3},{value:"Example",id:"example",level:3},{value:"Where to next?",id:"where-to-next",level:2}],h={toc:m};function d(e){let{components:t,...s}=e;return(0,r.kt)("wrapper",(0,n.Z)({},h,s,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Typing terms in Google and searching them up yields a lot of results. But why are we getting the results in that order? The answer to that question is the PageRank algorithm. The PageRank algorithm is a way to measure the importance of a webpage by analyzing the quantity and quality of the links that point to it."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"PageRank-example-1",src:a(6252).Z,width:"1224",height:"816"})),(0,r.kt)("h2",{id:"how-does-it-work"},"How does it work?"),(0,r.kt)("p",null,"Google interprets a link from page A to page B as a vote from page A to page B.  All incoming links can be interpreted as votes. Looking at Figure X, we can say that then, the yellow node is more important than the red node."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"PageRank-example-2",src:a(1255).Z,width:"1391",height:"718"})),(0,r.kt)("p",null,"But, it also takes into consideration the \u201cimportance\u201d of the page that is \u201cgiving\u201d out the vote. If the page that\u2019s casting a vote is more important, the links are worth more and it will help rank up the other pages. Page\u2019s importance is equal to the sum of the votes of its incoming links.\n",(0,r.kt)("img",{alt:"PageRank-example-3",src:a(6358).Z,width:"1008",height:"991"})),(0,r.kt)("p",null,"Mathematically, ",(0,r.kt)("strong",{parentName:"p"},"PageRank")," (PR) is defined as:"),(0,r.kt)("p",null,"PR(A) = (1 - d) + d i=1nPR(Ti)C(Ti)"),(0,r.kt)("p",null,"where\nPage A has pages T1 to Tn which point to it\nd is a damping factor set between 0 and 1. It is usually set to 0.85\nC(A) is defined as the number of links going out of page A."),(0,r.kt)("p",null,"The algorithm is robust against spam since it\u2019s not easy for a web page owner to add in links to their page from other important pages. The disadvantage is that it favours the older pages because new pages will not have many links going towards them. "),(0,r.kt)("h2",{id:"practical-applications"},"Practical applications"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Determining key species in ecology by mapping the relationship between species in the ecosystem. PageRank allows users to identify the most important species. "),(0,r.kt)("li",{parentName:"ul"},"It\u2019s been used to rank public spaces or streets, predicting traffic flow and human movement"),(0,r.kt)("li",{parentName:"ul"},"Personalized PageRank is used by Twitter to present users with recommendations of other accounts that they may wish to follow")),(0,r.kt)("h2",{id:"pseudocode"},"Pseudocode"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"n = number of nodes in graph\nINIT LIST A\nINIT LIST PR\nFOR i = 0 to n-1\n    A[i] = 1/n-1\nENDFOR\nd = some value between 0 and 1 (usually 0.85)\n\nFOR i = 0 to n-1\n    PR[i] = 1-d\n    FOR EACH page Q that connects to PR[i]\n        On = number of outgoing edges of Q\n        PR[i] = PR[i] + d * A[Q]/On\n        FOR i = 0 to n-1\n            A[i] = PR[i]\n        ENDFOR\n    ENDFOR\nENDFOR\n")),(0,r.kt)("h2",{id:"usage-in-networkx"},"Usage in NetworkX"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"pagerank(G, alpha=0.85, personalization=None, max_iter=100, tol=1e-06, nstart=None, weight='weight', dangling=None)\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Not fast enough?")," Find 100x faster algorithms ",(0,r.kt)("a",{parentName:"p",href:"https://memgraph.com/memgraph-for-networkx?utm_source=networkx-guide&utm_medium=referral&utm_campaign=networkx_ppp&utm_term=centralityalgorithms%2Bpagerank&utm_content=findfasteralgorithms"},(0,r.kt)("strong",{parentName:"a"},"here")),"."),(0,r.kt)("h3",{id:"method-input"},"Method input"),(0,r.kt)("p",null,"The first input parameter of the method, G, is a NetworkX graph. Undirected graphs will be converted to a directed graph with two directed edges for each undirected edge.\nThe second parameter, alpha, is the damping parameter for PageRank and the default value is 0.85.\nThe fourth parameter, max_iter, is the Maximum number of iterations.\nThe seventh parameter, weight, represents the edge attribute that should be used as the edge weight. If it\u2019s not specified, the weight of all edges will be 1. "),(0,r.kt)("p",null,"For all other parameters, check out the ",(0,r.kt)("a",{parentName:"p",href:"https://networkx.org/documentation/stable/reference/algorithms/generated/networkx.algorithms.link_analysis.pagerank_alg.pagerank.html#networkx.algorithms.link_analysis.pagerank_alg.pagerank"},"NetworkX Reference Guide"),"."),(0,r.kt)("h3",{id:"method-output"},"Method output"),(0,r.kt)("p",null,"The output of the method is a dictionary with nodes as keys and with PageRank as values."),(0,r.kt)("h3",{id:"example"},"Example"),(0,r.kt)("p",null,"Python\u2019s NetworkX implements the PageRank algorithm as part of its Link Analysis algorithms. In the example below, we will showcase how to use the PageRank algorithm. "),(0,r.kt)(o.Z,{groupId:"pagerank",defaultValue:"code",values:[{label:"Python code",value:"code"},{label:"Output",value:"output"},{label:"Visualization",value:"visualization"}],mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"code",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"G = nx.DiGraph()\n\n[G.add_node(k) for k in [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\"]]\nG.add_edges_from([('G','A'), ('A','G'),('B','A'),\n                  ('C','A'),('A','C'),('A','D'),\n                  ('E','A'),('F','A'),('D','B'),\n                  ('D','F')])\n\n\nppr1 = nx.pagerank(G)\n\nprint(\u201cPage rank value: \u201d + ppr1)\npos = nx.spiral_layout(G)\nnx.draw(G, pos, with_labels = True, node_color=\"#f86e00\")\nplt.show()\n"))),(0,r.kt)(i.Z,{value:"output",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Page rank values: {'A': 0.408074514346756, 'B': 0.07967426232810562, 'C': 0.13704946318948708, 'D': 0.13704946318948708, 'E': 0.021428571428571432, 'F': 0.07967426232810562, 'G': 0.13704946318948708}\n"))),(0,r.kt)(i.Z,{value:"visualization",mdxType:"TabItem"},(0,r.kt)("p",null,(0,r.kt)("img",{alt:"PageRank example",src:a(8242).Z,width:"640",height:"480"})))),(0,r.kt)("h2",{id:"where-to-next"},"Where to next?"),(0,r.kt)("p",null,"There are many graph algorithms libraries out there, with their own implementations of PageRank algorithm. NetworkX's algorithms are written in Python, and there are many other libraries that offer faster C++ implementations, such as ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/memgraph/mage"},(0,r.kt)("strong",{parentName:"a"},"MAGE")),", a graph algorithms library developed by Memgraph team."),(0,r.kt)(l.Z,{title:"Memgraph for NetworkX developers",url:"https://memgraph.com/memgraph-for-networkx?utm_source=networkx-guide&utm_medium=referral&utm_campaign=networkx_ppp&utm_term=centralityalgorithms%2Bpagerank&utm_content=ctabutton",mdxType:"CtaButton"}))}d.isMDXComponent=!0},6252:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/pagerank-example-1-b7f29d1d7e78d2f26a485aa23ab90920.jpg"},1255:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/pagerank-example-2-8e58b7e86bcfbf75f1ae5a23d615780d.jpg"},6358:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/pagerank-example-3-4473399bdb45aaf493d9fe35db690fc3.jpg"},8242:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/pagerank-matplotlib-e8f6fd2756ccd36b905c21fa91b0a832.png"}}]);